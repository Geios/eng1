Rogerio Serraglio
Engenharia de software 1
Prof Radames Pereira

A crise do software, que ocorreu entre os anos 1960 e 1980, caracterizou-se pela incapacidade da indústria de produzir consistentemente software de alta qualidade em tempo hábil. A falta de padronização do processo de desenvolvimento de software, os altos custos de desenvolvimento e a falta de ferramentas adequadas são os principais fatores que contribuem para essa crise.

Para superar a crise, além de desenvolver ferramentas mais avançadas, foram criados padrões e metodologias de desenvolvimento de software. Estas soluções ajudam a aumentar a eficiência e acessibilidade do desenvolvimento de software, permitindo a criação de soluções técnicas mais complexas e inovadoras.

Hoje, a indústria de software continua enfrentando desafios, mas desde que soluções foram encontradas durante a crise do software, o desenvolvimento de software tornou-se mais fácil e eficiente, permitindo a criação de soluções tecnológicas mais avançadas e inovadoras.



Os requisitos funcionais descrevem as funções ou serviços que um sistema deve fornecer. Eles são o que o sistema precisa fazer e como ele deve responder às entradas específicas do usuário. Eles são uma parte essencial da definição do escopo e dos objetivos do projeto.

Os requisitos não funcionais definem os atributos do sistema, como desempenho, segurança, usabilidade e confiabilidade. Eles são descritos em relação a como o sistema deve funcionar e se comportar em diferentes condições, mas não estão diretamente relacionados às funções específicas do sistema.

Os requisitos do sistema descrevem as necessidades técnicas do sistema, incluindo hardware, software, segurança e compatibilidade com outros sistemas. Eles são importantes para garantir que o sistema seja construído com a tecnologia certa e esteja em conformidade com os padrões e regulamentos relevantes.
